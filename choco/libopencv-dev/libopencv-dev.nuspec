<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>libopencv-dev</id>
    <version>3.2.0</version>
    <packageSourceUrl>https://github.com/lebarsfa/Packages/tree/libopencv-dev.3.2.0/choco/libopencv-dev</packageSourceUrl>
    <owners>lebarsfa</owners>
    <title>OpenCV</title>
    <authors>Itseez</authors>
    <projectUrl>http://opencv.org/</projectUrl>
    <iconUrl>https://cdn.statically.io/gh/lebarsfa/Packages/a637a2f/choco/icons/opencv.png</iconUrl>
    <licenseUrl>http://opencv.org/license.html</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/opencv/opencv</projectSourceUrl>
    <docsUrl>https://docs.opencv.org/</docsUrl>
    <tags>OpenCV image processing programming library C++ CPP</tags>
    <summary>Development files for OpenCV.</summary>
    <description>
OpenCV development defaults package.

## Quick start
- After [installing Chocolatey](https://chocolatey.org/install), run `choco install -y libopencv-dev cmake.install --installargs 'ADD_CMAKE_TO_PATH=System'` in PowerShell, reboot and then get the folder from https://www.ensta-bretagne.fr/lebars/Share/ImageOpenCV320_Ubuntu18.04.zip and inside, try `cmake -G "MinGW Makefiles" .`, `cmake --build .`, `.\ImageOpenCV.exe` in a new PowerShell window and check that an image appears in a window.

## Troubleshooting
- Check that all the packages and their dependencies were installed, if one failed (e.g. due to network-related errors) try to reinstall it using --force or try a previous version...
    </description>
    <releaseNotes>https://github.com/opencv/opencv/wiki/ChangeLog</releaseNotes>
    <dependencies>
      <dependency id="chocolatey-core.extension" version="1.1.0" />
      <dependency id="mingw" version="[8.1.0]" />
    </dependencies>
  </metadata>
</package>
